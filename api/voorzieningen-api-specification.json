{
  "openapi": "3.1.0",
  "info": {
    "title": "Voorzieningen API",
    "version": "1.0.2",
    "description": "Register voor voorzieningen uit de softwarecatalogus"
  },
  "servers": [
    {
      "url": "https://vng.test.commonground.nu/apps/openregister/api",
      "description": "OpenRegister API Server"
    }
  ],
  "security": [
    {
      "basicAuth": []
    },
    {
      "oauth2": [
        "read",
        "write"
      ]
    }
  ],
  "tags": [
    {
      "name": "sector",
      "description": ""
    },
    {
      "name": "Voorziening",
      "description": "Een generieke voorziening (software product)"
    },
    {
      "name": "Voorzieningaanbod",
      "description": "Een specifiek aanbod van een voorziening door een leverancier"
    },
    {
      "name": "Voorzieningversie",
      "description": "Een specifieke versie van een voorzieningaanbod"
    },
    {
      "name": "Kwetsbaarheid",
      "description": "Een beveiligingskwetsbaarheid in een voorzieningversie"
    },
    {
      "name": "Contactgegevens",
      "description": "Contactgegevens van een persoon"
    },
    {
      "name": "Organisatie",
      "description": "Een organisatie die voorzieningen aanbiedt"
    },
    {
      "name": "VoorzieningGebruik",
      "description": "Een organisatie die een voorziening gebruikt"
    },
    {
      "name": "Contract",
      "description": "Een formele overeenkomst voor het inzetten van een VoorzieningAanbod op een VoorzieningGebruik"
    },
    {
      "name": "Standaard",
      "description": "Een specifieke standaard waaraan een voorziening kan voldoen"
    },
    {
      "name": "Review",
      "description": "Beoordeling van een voorziening"
    },
    {
      "name": "Koppeling",
      "description": ""
    },
    {
      "name": "Beoordeeling",
      "description": ""
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Basic authentication using username and password. Not recommended for production use."
      },
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth2 authentication using Nextcloud's authentication server.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/apps/oauth2/authorize",
            "tokenUrl": "/apps/oauth2/api/v1/token",
            "refreshUrl": "/apps/oauth2/api/v1/token",
            "scopes": {
              "read": "Read access to all resources",
              "write": "Write access to all resources"
            }
          }
        }
      }
    },
    "schemas": {
      "Lock": {
        "type": "object",
        "x-tag": "generic",
        "description": "Lock information object for concurrent access control. Objects can be locked to prevent concurrent editing, ensuring data integrity in multi-user environments.",
        "properties": {
          "user": {
            "type": "string",
            "description": "User ID that created the lock",
            "example": "user_id"
          },
          "process": {
            "type": "string",
            "description": "Optional process name associated with the lock",
            "example": "optional_process_name"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the lock was created",
            "example": "timestamp"
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the lockin seconds",
            "example": "seconds"
          },
          "expiration": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the object expires (is autmaticly removed)",
            "example": "timestamp"
          }
        }
      },
      "Deletion": {
        "type": "object",
        "x-tag": "generic",
        "properties": {
          "deleted": {
            "type": "string",
            "format": "date-time",
            "description": "When the object was marked as deleted",
            "example": "2023-01-01T00:00:00Z"
          },
          "deletedBy": {
            "type": "string",
            "description": "User ID who performed the deletion",
            "example": "user-12345"
          },
          "deletedReason": {
            "type": "string",
            "description": "Optional reason for deletion",
            "example": "No longer needed"
          },
          "retentionPeriod": {
            "type": "integer",
            "description": "How long to keep the deleted object (in days)",
            "example": 30,
            "default": 30
          },
          "purgeDate": {
            "type": "string",
            "format": "date-time",
            "description": "When the object will be permanently deleted",
            "example": "2023-01-31T00:00:00Z"
          }
        }
      },
      "@self": {
        "type": "object",
        "x-tag": "generic",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the object",
            "example": 123
          },
          "uuid": {
            "type": "string",
            "description": "Unique universal identifier for globally unique object identification",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "uri": {
            "type": "string",
            "description": "Uniform Resource Identifier for unique addressable location",
            "example": "/api/objects/123e4567-e89b-12d3-a456-426614174000"
          },
          "version": {
            "type": "string",
            "description": "Semantic version number to track object versions",
            "example": "1.0"
          },
          "register": {
            "type": "integer",
            "description": "Register identifier for object categorization/grouping",
            "example": 123
          },
          "schema": {
            "type": "integer",
            "description": "Schema identifier for data validation reference",
            "example": 123
          },
          "textRepresentation": {
            "type": "string",
            "description": "Text representation of object for search and display optimization",
            "example": "John Doe, born 1980-01-15, email: john.doe@example.com"
          },
          "locked": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Lock"
              },
              {
                "type": "null"
              }
            ],
            "description": "Contains either a lock object or the value null"
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Deletion"
              },
              {
                "type": "null"
              }
            ],
            "description": "Contains either a deletion object or the value null"
          },
          "owner": {
            "type": "string",
            "description": "Nextcloud user identifier for object ownership",
            "example": "user-12345"
          },
          "authorization": {
            "type": "object",
            "description": "Authorization rules for access control configuration",
            "example": {
              "read": true,
              "write": false
            }
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp for change tracking",
            "example": "2023-05-20T10:15:00Z"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp for lifecycle management",
            "example": "2023-02-15T14:30:00Z"
          },
          "folder": {
            "type": "string",
            "description": "Storage folder path for file organization",
            "example": "/persons/john-doe"
          },
          "files": {
            "type": "array",
            "description": "Array of related files to track associated files",
            "items": {
              "$ref": "#/components/schemas/File"
            },
            "example": [
              {
                "id": 123,
                "uuid": "123e4567-e89b-12d3-a456-426614174000",
                "filename": "profile.jpg",
                "downloadUrl": "https://example.com/download/123",
                "shareUrl": "https://example.com/share/123",
                "accessUrl": "https://example.com/access/123",
                "extension": "jpg",
                "checksum": "abc123",
                "source": 1,
                "userId": "user-12345",
                "base64": "base64encodedstring",
                "filePath": "/files/profile.jpg",
                "created": "2023-02-15T14:30:00Z",
                "updated": "2023-05-20T10:15:00Z"
              },
              {
                "id": 124,
                "uuid": "123e4567-e89b-12d3-a456-426614174001",
                "filename": "resume.pdf",
                "downloadUrl": "https://example.com/download/124",
                "shareUrl": "https://example.com/share/124",
                "accessUrl": "https://example.com/access/124",
                "extension": "pdf",
                "checksum": "def456",
                "source": 1,
                "userId": "user-12345",
                "base64": "base64encodedstring",
                "filePath": "/files/resume.pdf",
                "created": "2023-02-16T14:30:00Z",
                "updated": "2023-05-21T10:15:00Z"
              }
            ]
          },
          "relations": {
            "type": "array",
            "description": "Array of related object IDs to track object relationships",
            "items": {
              "type": "string"
            },
            "example": {
              "spouse": "123e4567-e89b-12d3-a456-426614174000"
            }
          },
          "errors": {
            "type": "array",
            "description": "Array of error messages encounterd during the rendering process of this object",
            "items": {
              "type": "string"
            },
            "example": [
              "Property 'spouse' could not be extended because it does not exist."
            ]
          }
        }
      },
      "File": {
        "type": "object",
        "x-tag": "generic",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier of the file in Nextcloud",
            "example": 123
          },
          "uuid": {
            "type": "string",
            "description": "Unique identifier for the file",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "filename": {
            "type": "string",
            "description": "Name of the file",
            "example": "profile.jpg"
          },
          "downloadUrl": {
            "type": "string",
            "format": "uri",
            "description": "Direct download URL for the file",
            "example": "https://example.com/download/123"
          },
          "shareUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to access the file via share link",
            "example": "https://example.com/share/123"
          },
          "accessUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to access the file",
            "example": "https://example.com/access/123"
          },
          "extension": {
            "type": "string",
            "description": "File extension",
            "example": "jpg"
          },
          "checksum": {
            "type": "string",
            "description": "ETag hash for file versioning",
            "example": "abc123"
          },
          "source": {
            "type": "integer",
            "description": "Source identifier",
            "example": 1
          },
          "userId": {
            "type": "string",
            "description": "ID of the user who owns the file",
            "example": "user-12345"
          },
          "base64": {
            "type": "string",
            "description": "Base64 encoded content of the file",
            "example": "base64encodedstring"
          },
          "filePath": {
            "type": "string",
            "description": "Full path to the file in Nextcloud",
            "example": "/files/profile.jpg"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp when file was first shared",
            "example": "2023-02-15T14:30:00Z"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 timestamp of last modification",
            "example": "2023-05-20T10:15:00Z"
          }
        }
      },
      "AuditTrail": {
        "type": "object",
        "x-tag": "generic",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "Unique identifier for the audit entry",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "schema": {
            "type": "integer",
            "description": "Schema ID of the modified object",
            "example": 42
          },
          "register": {
            "type": "integer",
            "description": "Register ID of the modified object",
            "example": 123
          },
          "object": {
            "type": "integer",
            "description": "Object ID that was modified",
            "example": 456
          },
          "action": {
            "type": "string",
            "description": "Type of change that occurred",
            "example": "create"
          },
          "changed": {
            "type": "object",
            "description": "Array of modified fields with old/new values",
            "example": {
              "name": {
                "old": "John",
                "new": "Jane"
              }
            }
          },
          "user": {
            "type": "string",
            "description": "ID of the user who made the change",
            "example": "admin"
          },
          "userName": {
            "type": "string",
            "description": "Display name of the user",
            "example": "Administrator"
          },
          "session": {
            "type": "string",
            "description": "Session ID when change occurred",
            "example": "sess_89d7h2"
          },
          "request": {
            "type": "string",
            "description": "Request ID for tracing",
            "example": "req_7d8h3j"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address of the request",
            "example": "192.168.1.1"
          },
          "version": {
            "type": "string",
            "description": "Object version after change",
            "example": "1.0.0"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the change",
            "example": "2024-03-15T14:30:00Z"
          },
          "processingActivity": {
            "type": "string",
            "description": "The processing activity from the registry"
          },
          "processing": {
            "type": "string",
            "description": "The specific task being performed"
          },
          "operation": {
            "type": "string",
            "description": "The step in the processing task"
          },
          "legalBasis": {
            "type": "string",
            "description": "Legal basis for the processing"
          },
          "retentionPeriod": {
            "type": "string",
            "description": "Retention period for the data"
          },
          "executor": {
            "type": "string",
            "description": "The system or person executing the action"
          },
          "system": {
            "type": "string",
            "description": "The system where the action occurred"
          },
          "dataSource": {
            "type": "string",
            "description": "The source of the data"
          }
        }
      },
      "sector": {
        "type": "object",
        "x-tags": [
          "sector"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          }
        }
      },
      "Voorziening": {
        "type": "object",
        "x-tags": [
          "Voorziening"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "beschrijving": {
            "type": "string",
            "description": "Beschrijving van de voorziening"
          },
          "categorie": {
            "type": "string",
            "description": "Categorie waartoe de voorziening behoort"
          },
          "functionaliteiten": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array van UUID's die verwijzen naar de functionaliteiten die de voorziening biedt"
          },
          "doelgroep": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Gemeente",
                "Waterschap",
                "Provincie",
                "Ministerie",
                "Uitvoeringsorganisatie",
                "Samenwerkingsverband",
                "Leverancier"
              ]
            },
            "description": "Doelgroepen waarvoor de voorziening is bedoeld"
          },
          "referentieComponenten": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "GEMMA referentiecomponenten die de voorziening implementeert"
          },
          "standaarden": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array van UUID's die verwijzen naar de standaarden die de voorziening ondersteunt"
          },
          "voorzieningstype": {
            "type": "string",
            "enum": [
              "Toepassing",
              "Platform",
              "GeneriekComponent",
              "Service",
              "Anders"
            ],
            "description": "Het type voorziening zoals geregistreerd in de catalogus"
          },
          "status": {
            "description": "",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "concept",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "naam": {
            "description": "Naam van de voorziening",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "contact": {
            "description": "",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          }
        }
      },
      "Voorzieningaanbod": {
        "type": "object",
        "x-tags": [
          "Voorzieningaanbod"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "voorziening": {
            "$ref": "#/components/schemas/Voorziening",
            "type": "object"
          },
          "leverancier": {
            "$ref": "#/components/schemas/Organisatie",
            "type": "object"
          },
          "productpagina": {
            "type": "string",
            "format": "uri",
            "description": "URL naar de productpagina"
          },
          "ondersteuningsopties": {
            "type": "array",
            "description": "Beschikbare ondersteuningsopties",
            "items": {
              "type": "string"
            }
          },
          "prijsmodel": {
            "type": "string",
            "description": "Beschrijving van het prijsmodel"
          },
          "certificeringen": {
            "type": "array",
            "description": "Lijst van certificeringen",
            "items": {
              "type": "string"
            }
          },
          "ondersteundeStandaarden": {
            "type": "array",
            "description": "Lijst van ondersteunde standaarden",
            "items": {
              "$ref": "#/components/schemas/Standaard",
              "type": "object"
            }
          },
          "status": {
            "description": "De status van dit aanbod",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "concept",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "licentie": {
            "description": "De licentie waaronder het anbod word gedaan, bijvoorbeeld EUPL 1.2 aan de hand van https://opensource.org/licenses",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "EUPL 1.2",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "hosting": {
            "description": "",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "none",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "on-premise",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "contact": {
            "description": "",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          }
        }
      },
      "Voorzieningversie": {
        "type": "object",
        "x-tags": [
          "Voorzieningversie"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "voorzieningaanbod": {
            "$ref": "#/components/schemas/Voorzieningaanbod",
            "type": "object"
          },
          "versienummer": {
            "type": "string",
            "description": "Versienummer van de voorziening"
          },
          "releaseNotes": {
            "type": "string",
            "description": "Release notes voor deze versie"
          },
          "releaseDatum": {
            "type": "string",
            "format": "date",
            "description": "Datum waarop deze versie is uitgebracht"
          },
          "eindDatumOndersteuning": {
            "type": "string",
            "format": "date",
            "description": "Datum waarop ondersteuning voor deze versie eindigt"
          },
          "systeemvereisten": {
            "type": "string",
            "description": "Systeemvereisten voor deze versie"
          },
          "kwetsbaarheden": {
            "type": "array",
            "description": "Bekende kwetsbaarheden in deze versie",
            "items": {
              "$ref": "#/components/schemas/Kwetsbaarheid",
              "type": "object"
            }
          }
        }
      },
      "Kwetsbaarheid": {
        "type": "object",
        "x-tags": [
          "Kwetsbaarheid"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "voorzieningversieId": {
            "type": "string",
            "description": "ID van de voorzieningversie waarin de kwetsbaarheid is gevonden"
          },
          "cveNummer": {
            "type": "string",
            "description": "CVE-nummer van de kwetsbaarheid"
          },
          "titel": {
            "type": "string",
            "description": "Titel van de kwetsbaarheid"
          },
          "beschrijving": {
            "type": "string",
            "description": "Beschrijving van de kwetsbaarheid"
          },
          "ernst": {
            "type": "string",
            "enum": [
              "laag",
              "gemiddeld",
              "hoog",
              "kritiek"
            ],
            "description": "Ernst van de kwetsbaarheid"
          },
          "ontdektOp": {
            "type": "string",
            "format": "date",
            "description": "Datum waarop de kwetsbaarheid is ontdekt"
          },
          "gepubliceerdOp": {
            "type": "string",
            "format": "date",
            "description": "Datum waarop de kwetsbaarheid is gepubliceerd"
          },
          "opgelostIn": {
            "type": "string",
            "description": "Versie waarin de kwetsbaarheid is opgelost"
          },
          "mitigatie": {
            "type": "string",
            "description": "Beschrijving van mogelijke mitigatiemaatregelen"
          },
          "referenties": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Referenties naar meer informatie over de kwetsbaarheid"
          }
        }
      },
      "Contactgegevens": {
        "type": "object",
        "x-tags": [
          "Contactgegevens"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "voornaam": {
            "type": "string",
            "description": "Voornaam van de contactpersoon"
          },
          "tussenvoegsel": {
            "type": "string",
            "description": "Tussenvoegsel van de contactpersoon"
          },
          "achternaam": {
            "type": "string",
            "description": "Achternaam van de contactpersoon"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "E-mailadres van de contactpersoon"
          },
          "telefoon": {
            "type": "string",
            "description": "Telefoonnummer van de contactpersoon"
          }
        }
      },
      "Organisatie": {
        "type": "object",
        "x-tags": [
          "Organisatie"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "kvk-nummer": {
            "type": "string",
            "description": "KvK-nummer van de organisatie"
          },
          "organisatienaam": {
            "type": "string",
            "description": "Naam van de organisatie"
          },
          "contactgegevens": {
            "$ref": "#/components/schemas/Contactgegevens",
            "type": "object"
          },
          "website": {
            "type": "string",
            "format": "uri",
            "description": "Website van de leverancier"
          },
          "beschrijving": {
            "type": "string",
            "description": "Beschrijving van de leverancier"
          },
          "links": {
            "description": "Extra verwijzigingen voor deze organisatie (zoals het support-portaal en handleidingen)",
            "type": "array",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "items": {
              "cascadeDelete": false,
              "$ref": "",
              "type": "string"
            },
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "oin": {
            "description": "Overheids identificatie nummer, identificeerd deze organisatie als een overheid.",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "status": {
            "description": "",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "concept",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          }
        }
      },
      "VoorzieningGebruik": {
        "type": "object",
        "x-tags": [
          "VoorzieningGebruik"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "organisatieId": {
            "type": "string",
            "format": "uuid",
            "description": "ID van de organisatie die de voorziening gebruikt"
          },
          "voorzieningId": {
            "type": "string",
            "format": "uuid",
            "description": "ID van de voorziening die gebruikt wordt"
          },
          "versieId": {
            "type": "string",
            "format": "uuid",
            "description": "ID van de specifieke versie van de voorziening die gebruikt wordt"
          },
          "beheerder": {
            "type": "object",
            "properties": {
              "naam": {
                "type": "string",
                "description": "De volledige naam van de persoon"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Het e-mailadres van de persoon"
              },
              "telefoonnummer": {
                "type": "string",
                "description": "Het telefoonnummer van de persoon"
              },
              "functie": {
                "type": "string",
                "description": "De functie van de persoon"
              }
            },
            "description": "De contactpersoon voor dit gebruik van de voorziening"
          },
          "startDatum": {
            "type": "string",
            "format": "date",
            "description": "De datum waarop het gebruik van de voorziening is gestart"
          },
          "eindDatum": {
            "type": "string",
            "format": "date",
            "description": "De datum waarop het gebruik van de voorziening is beëindigd"
          },
          "opmerkingen": {
            "type": "string",
            "description": "Aanvullende informatie over het gebruik van de voorziening"
          },
          "bbnScore": {
            "type": "integer",
            "minimum": 1,
            "maximum": 3,
            "description": "De BBN (Basis Beveiligings Niveau) score van het voorzieninggebruik"
          },
          "ibpScore": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "description": "De IBP (Informatiebeveiliging en Privacy) score van het voorzieninggebruik"
          },
          "bivClassificatie": {
            "type": "object",
            "properties": {
              "beschikbaarheid": {
                "type": "string",
                "enum": [
                  "Laag",
                  "Midden",
                  "Hoog"
                ]
              },
              "integriteit": {
                "type": "string",
                "enum": [
                  "Laag",
                  "Midden",
                  "Hoog"
                ]
              },
              "vertrouwelijkheid": {
                "type": "string",
                "enum": [
                  "Laag",
                  "Midden",
                  "Hoog"
                ]
              }
            },
            "description": "De BIV (Beschikbaarheid, Integriteit, Vertrouwelijkheid) classificatie"
          },
          "bedrijfsKritisch": {
            "type": "boolean",
            "default": false,
            "description": "Geeft aan of het voorzieninggebruik bedrijfskritisch is"
          },
          "privacyGevoelig": {
            "type": "boolean",
            "default": false,
            "description": "Geeft aan of het voorzieninggebruik privacy gevoelige gegevens bevat"
          },
          "status": {
            "description": "De status van het gebruik",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "concept",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": [],
            "enum": [
              "Actief",
              "Gepland",
              "Beëindigd"
            ]
          },
          "hosting": {
            "description": "",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "none",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "none",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "deelneming": {
            "description": "De deelneming die dit gebruik heeft aangemaakt, indien ingevuld dan is dit gebruik aangemaakt door een andere organisatie dan de eigenaar",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "contact": {
            "description": "",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          }
        }
      },
      "Contract": {
        "type": "object",
        "x-tags": [
          "Contract"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "voorzieningAanbod": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "naam": {
                "type": "string"
              }
            },
            "description": "Het aanbod van de voorziening waarop dit contract betrekking heeft"
          },
          "voorzieningGebruik": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "organisatie": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "naam": {
                    "type": "string"
                  }
                }
              },
              "voorziening": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "naam": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "Het gebruik van de voorziening waarop dit contract betrekking heeft"
          },
          "startDatum": {
            "type": "string",
            "format": "date",
            "description": "De startdatum van het contract"
          },
          "eindDatum": {
            "type": "string",
            "format": "date",
            "description": "De einddatum van het contract (indien van toepassing)"
          },
          "contractNummer": {
            "type": "string",
            "description": "Het referentienummer van het contract"
          },
          "contractType": {
            "type": "string",
            "enum": [
              "SLA",
              "Licentie",
              "Onderhoud"
            ],
            "description": "Het type contract"
          },
          "kosten": {
            "type": "number",
            "description": "De kosten verbonden aan het contract"
          },
          "kostenPeriode": {
            "type": "string",
            "enum": [
              "Maandelijks",
              "Jaarlijks",
              "Eenmalig"
            ],
            "description": "De periode waarop de kosten betrekking hebben"
          },
          "contactpersoonAanbieder": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "naam": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "description": "De contactpersoon bij de aanbieder"
          },
          "contactpersoonGebruiker": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "naam": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "description": "De contactpersoon bij de gebruiker"
          },
          "documentReferentie": {
            "type": "string",
            "description": "Referentie naar het contractdocument"
          },
          "status": {
            "type": "string",
            "enum": [
              "Actief",
              "Verlopen",
              "In onderhandeling"
            ],
            "description": "De status van het contract"
          },
          "opmerkingen": {
            "type": "string",
            "description": "Aanvullende informatie over het contract"
          }
        }
      },
      "Standaard": {
        "type": "object",
        "x-tags": [
          "Standaard"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "naam": {
            "type": "string",
            "description": "Naam van de standaard"
          },
          "beschrijving": {
            "type": "string",
            "description": "Beschrijving van de standaard"
          },
          "standaardtype": {
            "type": "string",
            "enum": [
              "Type1",
              "Type2",
              "Type3"
            ],
            "description": "Type van de standaard"
          },
          "versie": {
            "type": "string",
            "description": "Versie van de standaard"
          },
          "beheerorganisatie": {
            "type": "string",
            "description": "Organisatie die de standaard beheert"
          },
          "website": {
            "type": "string",
            "format": "uri",
            "description": "Website van de standaard"
          },
          "status": {
            "type": "string",
            "enum": [
              "Concept",
              "In ontwikkeling",
              "Vastgesteld",
              "Verouderd"
            ],
            "description": "Status van de standaard"
          }
        }
      },
      "Review": {
        "type": "object",
        "x-tags": [
          "Review"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "voorziening": {
            "$ref": "#/components/schemas/Voorziening",
            "description": "De beoordeelde voorziening",
            "type": "string"
          },
          "score": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "description": "Score van de beoordeling (1-5)"
          },
          "titel": {
            "type": "string",
            "description": "Titel van de beoordeling"
          },
          "tekst": {
            "type": "string",
            "description": "Tekst van de beoordeling"
          },
          "datum": {
            "type": "string",
            "format": "date",
            "description": "Datum van de beoordeling"
          },
          "voordelen": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Voordelen van de voorziening"
          },
          "nadelen": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Nadelen van de voorziening"
          }
        }
      },
      "Koppeling": {
        "type": "object",
        "x-tags": [
          "Koppeling"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "van": {
            "description": "VoorzieningGebruikId",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": true,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "naar": {
            "description": "VoorzieningGebruikId of LandelijkeVoorzieningid",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "standaard": {
            "description": "De toepgepaste standaard binnen deze koppelen",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "versie": {
            "description": "Een optionele versie van de toegepaste standaard",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          }
        }
      },
      "Beoordeeling": {
        "type": "object",
        "x-tags": [
          "Beoordeeling"
        ],
        "properties": {
          "@self": {
            "$ref": "#/components/schemas/@self",
            "readOnly": true,
            "description": "The metadata of the object e.g. owner, created, modified, etc."
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "The unique identifier for the object."
          },
          "titel": {
            "description": "",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "beschrijving": {
            "description": "",
            "type": "string",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "waardering": {
            "description": "",
            "type": "integer",
            "format": "",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": 5,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "voorziening": {
            "description": "",
            "type": "string",
            "format": "uuid",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "aanbod": {
            "description": "",
            "type": "string",
            "format": "uuid",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          },
          "gebruik": {
            "description": "",
            "type": "string",
            "format": "uuid",
            "pattern": "",
            "default": "",
            "behavior": "",
            "required": false,
            "deprecated": false,
            "visible": true,
            "hideOnCollection": false,
            "minLength": null,
            "maxLength": null,
            "example": "",
            "immutable": false,
            "minimum": null,
            "maximum": null,
            "multipleOf": null,
            "exclusiveMin": false,
            "exclusiveMax": false,
            "minItems": null,
            "maxItems": null,
            "cascadeDelete": false,
            "inversedBy": "",
            "$ref": "",
            "objectConfiguration": {
              "handling": "nested-object",
              "schema": ""
            },
            "fileConfiguration": {
              "handling": "ignore",
              "allowedMimeTypes": [],
              "location": "",
              "maxSize": 0
            },
            "oneOf": []
          }
        }
      }
    }
  },
  "paths": {
    "/voorzieningen/sector": {
      "tags": [
        "sector"
      ],
      "get": {
        "summary": "Get all sector objects",
        "operationId": "getAllSector",
        "tags": [
          "sector"
        ],
        "description": "Retrieve a list of all sector objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sector objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sector"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new sector object",
        "operationId": "createSector",
        "tags": [
          "sector"
        ],
        "description": "Create a new sector object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sector"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "sector created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sector"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/sector/{id}": {
      "tags": [
        "sector"
      ],
      "get": {
        "summary": "Get a sector object by ID",
        "operationId": "getSector",
        "tags": [
          "sector"
        ],
        "description": "Retrieve a specific sector object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the sector object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "sector found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sector"
                }
              }
            }
          },
          "404": {
            "description": "sector not found."
          }
        }
      },
      "put": {
        "summary": "Update a sector object",
        "operationId": "updateSector",
        "tags": [
          "sector"
        ],
        "description": "Update an existing sector object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the sector object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sector"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sector updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sector"
                }
              }
            }
          },
          "404": {
            "description": "sector not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a sector object",
        "operationId": "deleteSector",
        "tags": [
          "sector"
        ],
        "description": "Delete a specific sector object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the sector object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "sector deleted successfully"
          },
          "404": {
            "description": "sector not found"
          }
        }
      }
    },
    "/voorzieningen/sector/{id}/audit-trails": {
      "tags": [
        "sector"
      ],
      "get": {
        "summary": "Get audit logs for a sector object",
        "operationId": "getLogsSector",
        "tags": [
          "sector"
        ],
        "description": "Retrieve the audit trail for a specific sector object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the sector object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "sector not found"
          }
        }
      }
    },
    "/voorzieningen/sector/{id}/files": {
      "tags": [
        "sector"
      ],
      "get": {
        "summary": "Get files for a sector object",
        "operationId": "getFilesSector",
        "tags": [
          "sector"
        ],
        "description": "Retrieve all files associated with a specific sector object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the sector object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "sector not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a sector object",
        "operationId": "uploadFileSector",
        "tags": [
          "sector"
        ],
        "description": "Upload a new file and associate it with a specific sector object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the sector object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "sector not found"
          }
        }
      }
    },
    "/voorzieningen/sector/{id}/lock": {
      "tags": [
        "sector"
      ],
      "post": {
        "summary": "Lock a sector object",
        "operationId": "lockSector",
        "tags": [
          "sector"
        ],
        "description": "Lock a specific sector object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the sector object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "sector not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/sector/{id}/unlock": {
      "tags": [
        "sector"
      ],
      "post": {
        "summary": "Unlock a sector object",
        "operationId": "unlockSector",
        "tags": [
          "sector"
        ],
        "description": "Remove the lock from a specific sector object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the sector object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "sector not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/voorziening": {
      "tags": [
        "Voorziening"
      ],
      "get": {
        "summary": "Get all Voorziening objects",
        "operationId": "getAllVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Retrieve a list of all Voorziening objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "beschrijving",
            "in": "query",
            "required": false,
            "description": "Filter results by beschrijving",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categorie",
            "in": "query",
            "required": false,
            "description": "Filter results by categorie",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionaliteiten",
            "in": "query",
            "required": false,
            "description": "Filter results by functionaliteiten",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "doelgroep",
            "in": "query",
            "required": false,
            "description": "Filter results by doelgroep",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "referentieComponenten",
            "in": "query",
            "required": false,
            "description": "Filter results by referentieComponenten",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "standaarden",
            "in": "query",
            "required": false,
            "description": "Filter results by standaarden",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "voorzieningstype",
            "in": "query",
            "required": false,
            "description": "Filter results by voorzieningstype",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Filter results by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "naam",
            "in": "query",
            "required": false,
            "description": "Filter results by naam",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact",
            "in": "query",
            "required": false,
            "description": "Filter results by contact",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Voorziening objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Voorziening"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Voorziening object",
        "operationId": "createVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Create a new Voorziening object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Voorziening"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Voorziening created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Voorziening"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/voorziening/{id}": {
      "tags": [
        "Voorziening"
      ],
      "get": {
        "summary": "Get a Voorziening object by ID",
        "operationId": "getVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Retrieve a specific Voorziening object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorziening object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Voorziening found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Voorziening"
                }
              }
            }
          },
          "404": {
            "description": "Voorziening not found."
          }
        }
      },
      "put": {
        "summary": "Update a Voorziening object",
        "operationId": "updateVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Update an existing Voorziening object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorziening object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Voorziening"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Voorziening updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Voorziening"
                }
              }
            }
          },
          "404": {
            "description": "Voorziening not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Voorziening object",
        "operationId": "deleteVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Delete a specific Voorziening object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorziening object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Voorziening deleted successfully"
          },
          "404": {
            "description": "Voorziening not found"
          }
        }
      }
    },
    "/voorzieningen/voorziening/{id}/audit-trails": {
      "tags": [
        "Voorziening"
      ],
      "get": {
        "summary": "Get audit logs for a Voorziening object",
        "operationId": "getLogsVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Retrieve the audit trail for a specific Voorziening object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorziening object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Voorziening not found"
          }
        }
      }
    },
    "/voorzieningen/voorziening/{id}/files": {
      "tags": [
        "Voorziening"
      ],
      "get": {
        "summary": "Get files for a Voorziening object",
        "operationId": "getFilesVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Retrieve all files associated with a specific Voorziening object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorziening object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Voorziening not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Voorziening object",
        "operationId": "uploadFileVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Upload a new file and associate it with a specific Voorziening object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorziening object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Voorziening not found"
          }
        }
      }
    },
    "/voorzieningen/voorziening/{id}/lock": {
      "tags": [
        "Voorziening"
      ],
      "post": {
        "summary": "Lock a Voorziening object",
        "operationId": "lockVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Lock a specific Voorziening object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorziening object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Voorziening not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/voorziening/{id}/unlock": {
      "tags": [
        "Voorziening"
      ],
      "post": {
        "summary": "Unlock a Voorziening object",
        "operationId": "unlockVoorziening",
        "tags": [
          "Voorziening"
        ],
        "description": "Remove the lock from a specific Voorziening object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorziening object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Voorziening not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/voorzieningaanbod": {
      "tags": [
        "Voorzieningaanbod"
      ],
      "get": {
        "summary": "Get all Voorzieningaanbod objects",
        "operationId": "getAllVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Retrieve a list of all Voorzieningaanbod objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "voorziening",
            "in": "query",
            "required": false,
            "description": "Filter results by voorziening",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "leverancier",
            "in": "query",
            "required": false,
            "description": "Filter results by leverancier",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "productpagina",
            "in": "query",
            "required": false,
            "description": "Filter results by productpagina",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ondersteuningsopties",
            "in": "query",
            "required": false,
            "description": "Filter results by ondersteuningsopties",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "prijsmodel",
            "in": "query",
            "required": false,
            "description": "Filter results by prijsmodel",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "certificeringen",
            "in": "query",
            "required": false,
            "description": "Filter results by certificeringen",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "ondersteundeStandaarden",
            "in": "query",
            "required": false,
            "description": "Filter results by ondersteundeStandaarden",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Filter results by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "licentie",
            "in": "query",
            "required": false,
            "description": "Filter results by licentie",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hosting",
            "in": "query",
            "required": false,
            "description": "Filter results by hosting",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact",
            "in": "query",
            "required": false,
            "description": "Filter results by contact",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Voorzieningaanbod objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Voorzieningaanbod"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Voorzieningaanbod object",
        "operationId": "createVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Create a new Voorzieningaanbod object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Voorzieningaanbod"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Voorzieningaanbod created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Voorzieningaanbod"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/voorzieningaanbod/{id}": {
      "tags": [
        "Voorzieningaanbod"
      ],
      "get": {
        "summary": "Get a Voorzieningaanbod object by ID",
        "operationId": "getVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Retrieve a specific Voorzieningaanbod object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningaanbod object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Voorzieningaanbod found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Voorzieningaanbod"
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningaanbod not found."
          }
        }
      },
      "put": {
        "summary": "Update a Voorzieningaanbod object",
        "operationId": "updateVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Update an existing Voorzieningaanbod object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningaanbod object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Voorzieningaanbod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Voorzieningaanbod updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Voorzieningaanbod"
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningaanbod not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Voorzieningaanbod object",
        "operationId": "deleteVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Delete a specific Voorzieningaanbod object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningaanbod object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Voorzieningaanbod deleted successfully"
          },
          "404": {
            "description": "Voorzieningaanbod not found"
          }
        }
      }
    },
    "/voorzieningen/voorzieningaanbod/{id}/audit-trails": {
      "tags": [
        "Voorzieningaanbod"
      ],
      "get": {
        "summary": "Get audit logs for a Voorzieningaanbod object",
        "operationId": "getLogsVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Retrieve the audit trail for a specific Voorzieningaanbod object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningaanbod object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningaanbod not found"
          }
        }
      }
    },
    "/voorzieningen/voorzieningaanbod/{id}/files": {
      "tags": [
        "Voorzieningaanbod"
      ],
      "get": {
        "summary": "Get files for a Voorzieningaanbod object",
        "operationId": "getFilesVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Retrieve all files associated with a specific Voorzieningaanbod object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningaanbod object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningaanbod not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Voorzieningaanbod object",
        "operationId": "uploadFileVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Upload a new file and associate it with a specific Voorzieningaanbod object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningaanbod object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningaanbod not found"
          }
        }
      }
    },
    "/voorzieningen/voorzieningaanbod/{id}/lock": {
      "tags": [
        "Voorzieningaanbod"
      ],
      "post": {
        "summary": "Lock a Voorzieningaanbod object",
        "operationId": "lockVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Lock a specific Voorzieningaanbod object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningaanbod object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningaanbod not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/voorzieningaanbod/{id}/unlock": {
      "tags": [
        "Voorzieningaanbod"
      ],
      "post": {
        "summary": "Unlock a Voorzieningaanbod object",
        "operationId": "unlockVoorzieningaanbod",
        "tags": [
          "Voorzieningaanbod"
        ],
        "description": "Remove the lock from a specific Voorzieningaanbod object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningaanbod object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Voorzieningaanbod not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/voorzieningversie": {
      "tags": [
        "Voorzieningversie"
      ],
      "get": {
        "summary": "Get all Voorzieningversie objects",
        "operationId": "getAllVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Retrieve a list of all Voorzieningversie objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "voorzieningaanbod",
            "in": "query",
            "required": false,
            "description": "Filter results by voorzieningaanbod",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "versienummer",
            "in": "query",
            "required": false,
            "description": "Filter results by versienummer",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "releaseNotes",
            "in": "query",
            "required": false,
            "description": "Filter results by releaseNotes",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "releaseDatum",
            "in": "query",
            "required": false,
            "description": "Filter results by releaseDatum",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eindDatumOndersteuning",
            "in": "query",
            "required": false,
            "description": "Filter results by eindDatumOndersteuning",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "systeemvereisten",
            "in": "query",
            "required": false,
            "description": "Filter results by systeemvereisten",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kwetsbaarheden",
            "in": "query",
            "required": false,
            "description": "Filter results by kwetsbaarheden",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Voorzieningversie objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Voorzieningversie"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Voorzieningversie object",
        "operationId": "createVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Create a new Voorzieningversie object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Voorzieningversie"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Voorzieningversie created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Voorzieningversie"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/voorzieningversie/{id}": {
      "tags": [
        "Voorzieningversie"
      ],
      "get": {
        "summary": "Get a Voorzieningversie object by ID",
        "operationId": "getVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Retrieve a specific Voorzieningversie object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningversie object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Voorzieningversie found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Voorzieningversie"
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningversie not found."
          }
        }
      },
      "put": {
        "summary": "Update a Voorzieningversie object",
        "operationId": "updateVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Update an existing Voorzieningversie object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningversie object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Voorzieningversie"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Voorzieningversie updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Voorzieningversie"
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningversie not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Voorzieningversie object",
        "operationId": "deleteVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Delete a specific Voorzieningversie object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningversie object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Voorzieningversie deleted successfully"
          },
          "404": {
            "description": "Voorzieningversie not found"
          }
        }
      }
    },
    "/voorzieningen/voorzieningversie/{id}/audit-trails": {
      "tags": [
        "Voorzieningversie"
      ],
      "get": {
        "summary": "Get audit logs for a Voorzieningversie object",
        "operationId": "getLogsVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Retrieve the audit trail for a specific Voorzieningversie object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningversie object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningversie not found"
          }
        }
      }
    },
    "/voorzieningen/voorzieningversie/{id}/files": {
      "tags": [
        "Voorzieningversie"
      ],
      "get": {
        "summary": "Get files for a Voorzieningversie object",
        "operationId": "getFilesVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Retrieve all files associated with a specific Voorzieningversie object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningversie object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningversie not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Voorzieningversie object",
        "operationId": "uploadFileVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Upload a new file and associate it with a specific Voorzieningversie object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningversie object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningversie not found"
          }
        }
      }
    },
    "/voorzieningen/voorzieningversie/{id}/lock": {
      "tags": [
        "Voorzieningversie"
      ],
      "post": {
        "summary": "Lock a Voorzieningversie object",
        "operationId": "lockVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Lock a specific Voorzieningversie object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningversie object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Voorzieningversie not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/voorzieningversie/{id}/unlock": {
      "tags": [
        "Voorzieningversie"
      ],
      "post": {
        "summary": "Unlock a Voorzieningversie object",
        "operationId": "unlockVoorzieningversie",
        "tags": [
          "Voorzieningversie"
        ],
        "description": "Remove the lock from a specific Voorzieningversie object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Voorzieningversie object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Voorzieningversie not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/kwetsbaarheid": {
      "tags": [
        "Kwetsbaarheid"
      ],
      "get": {
        "summary": "Get all Kwetsbaarheid objects",
        "operationId": "getAllKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Retrieve a list of all Kwetsbaarheid objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "voorzieningversieId",
            "in": "query",
            "required": false,
            "description": "Filter results by voorzieningversieId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cveNummer",
            "in": "query",
            "required": false,
            "description": "Filter results by cveNummer",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "titel",
            "in": "query",
            "required": false,
            "description": "Filter results by titel",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beschrijving",
            "in": "query",
            "required": false,
            "description": "Filter results by beschrijving",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ernst",
            "in": "query",
            "required": false,
            "description": "Filter results by ernst",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ontdektOp",
            "in": "query",
            "required": false,
            "description": "Filter results by ontdektOp",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gepubliceerdOp",
            "in": "query",
            "required": false,
            "description": "Filter results by gepubliceerdOp",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opgelostIn",
            "in": "query",
            "required": false,
            "description": "Filter results by opgelostIn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mitigatie",
            "in": "query",
            "required": false,
            "description": "Filter results by mitigatie",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referenties",
            "in": "query",
            "required": false,
            "description": "Filter results by referenties",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Kwetsbaarheid objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kwetsbaarheid"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Kwetsbaarheid object",
        "operationId": "createKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Create a new Kwetsbaarheid object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kwetsbaarheid"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Kwetsbaarheid created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kwetsbaarheid"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/kwetsbaarheid/{id}": {
      "tags": [
        "Kwetsbaarheid"
      ],
      "get": {
        "summary": "Get a Kwetsbaarheid object by ID",
        "operationId": "getKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Retrieve a specific Kwetsbaarheid object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Kwetsbaarheid object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Kwetsbaarheid found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kwetsbaarheid"
                }
              }
            }
          },
          "404": {
            "description": "Kwetsbaarheid not found."
          }
        }
      },
      "put": {
        "summary": "Update a Kwetsbaarheid object",
        "operationId": "updateKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Update an existing Kwetsbaarheid object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Kwetsbaarheid object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kwetsbaarheid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Kwetsbaarheid updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kwetsbaarheid"
                }
              }
            }
          },
          "404": {
            "description": "Kwetsbaarheid not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Kwetsbaarheid object",
        "operationId": "deleteKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Delete a specific Kwetsbaarheid object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Kwetsbaarheid object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Kwetsbaarheid deleted successfully"
          },
          "404": {
            "description": "Kwetsbaarheid not found"
          }
        }
      }
    },
    "/voorzieningen/kwetsbaarheid/{id}/audit-trails": {
      "tags": [
        "Kwetsbaarheid"
      ],
      "get": {
        "summary": "Get audit logs for a Kwetsbaarheid object",
        "operationId": "getLogsKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Retrieve the audit trail for a specific Kwetsbaarheid object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Kwetsbaarheid object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Kwetsbaarheid not found"
          }
        }
      }
    },
    "/voorzieningen/kwetsbaarheid/{id}/files": {
      "tags": [
        "Kwetsbaarheid"
      ],
      "get": {
        "summary": "Get files for a Kwetsbaarheid object",
        "operationId": "getFilesKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Retrieve all files associated with a specific Kwetsbaarheid object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Kwetsbaarheid object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Kwetsbaarheid not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Kwetsbaarheid object",
        "operationId": "uploadFileKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Upload a new file and associate it with a specific Kwetsbaarheid object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Kwetsbaarheid object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Kwetsbaarheid not found"
          }
        }
      }
    },
    "/voorzieningen/kwetsbaarheid/{id}/lock": {
      "tags": [
        "Kwetsbaarheid"
      ],
      "post": {
        "summary": "Lock a Kwetsbaarheid object",
        "operationId": "lockKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Lock a specific Kwetsbaarheid object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Kwetsbaarheid object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Kwetsbaarheid not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/kwetsbaarheid/{id}/unlock": {
      "tags": [
        "Kwetsbaarheid"
      ],
      "post": {
        "summary": "Unlock a Kwetsbaarheid object",
        "operationId": "unlockKwetsbaarheid",
        "tags": [
          "Kwetsbaarheid"
        ],
        "description": "Remove the lock from a specific Kwetsbaarheid object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Kwetsbaarheid object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Kwetsbaarheid not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/contactgegevens": {
      "tags": [
        "Contactgegevens"
      ],
      "get": {
        "summary": "Get all Contactgegevens objects",
        "operationId": "getAllContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Retrieve a list of all Contactgegevens objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "voornaam",
            "in": "query",
            "required": false,
            "description": "Filter results by voornaam",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tussenvoegsel",
            "in": "query",
            "required": false,
            "description": "Filter results by tussenvoegsel",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "achternaam",
            "in": "query",
            "required": false,
            "description": "Filter results by achternaam",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "description": "Filter results by email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "telefoon",
            "in": "query",
            "required": false,
            "description": "Filter results by telefoon",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Contactgegevens objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contactgegevens"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Contactgegevens object",
        "operationId": "createContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Create a new Contactgegevens object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contactgegevens"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contactgegevens created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contactgegevens"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/contactgegevens/{id}": {
      "tags": [
        "Contactgegevens"
      ],
      "get": {
        "summary": "Get a Contactgegevens object by ID",
        "operationId": "getContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Retrieve a specific Contactgegevens object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contactgegevens object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Contactgegevens found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contactgegevens"
                }
              }
            }
          },
          "404": {
            "description": "Contactgegevens not found."
          }
        }
      },
      "put": {
        "summary": "Update a Contactgegevens object",
        "operationId": "updateContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Update an existing Contactgegevens object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contactgegevens object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contactgegevens"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contactgegevens updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contactgegevens"
                }
              }
            }
          },
          "404": {
            "description": "Contactgegevens not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Contactgegevens object",
        "operationId": "deleteContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Delete a specific Contactgegevens object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contactgegevens object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contactgegevens deleted successfully"
          },
          "404": {
            "description": "Contactgegevens not found"
          }
        }
      }
    },
    "/voorzieningen/contactgegevens/{id}/audit-trails": {
      "tags": [
        "Contactgegevens"
      ],
      "get": {
        "summary": "Get audit logs for a Contactgegevens object",
        "operationId": "getLogsContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Retrieve the audit trail for a specific Contactgegevens object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contactgegevens object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contactgegevens not found"
          }
        }
      }
    },
    "/voorzieningen/contactgegevens/{id}/files": {
      "tags": [
        "Contactgegevens"
      ],
      "get": {
        "summary": "Get files for a Contactgegevens object",
        "operationId": "getFilesContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Retrieve all files associated with a specific Contactgegevens object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contactgegevens object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contactgegevens not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Contactgegevens object",
        "operationId": "uploadFileContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Upload a new file and associate it with a specific Contactgegevens object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contactgegevens object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Contactgegevens not found"
          }
        }
      }
    },
    "/voorzieningen/contactgegevens/{id}/lock": {
      "tags": [
        "Contactgegevens"
      ],
      "post": {
        "summary": "Lock a Contactgegevens object",
        "operationId": "lockContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Lock a specific Contactgegevens object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contactgegevens object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Contactgegevens not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/contactgegevens/{id}/unlock": {
      "tags": [
        "Contactgegevens"
      ],
      "post": {
        "summary": "Unlock a Contactgegevens object",
        "operationId": "unlockContactgegevens",
        "tags": [
          "Contactgegevens"
        ],
        "description": "Remove the lock from a specific Contactgegevens object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contactgegevens object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Contactgegevens not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/organisatie": {
      "tags": [
        "Organisatie"
      ],
      "get": {
        "summary": "Get all Organisatie objects",
        "operationId": "getAllOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Retrieve a list of all Organisatie objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "kvk-nummer",
            "in": "query",
            "required": false,
            "description": "Filter results by kvk-nummer",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organisatienaam",
            "in": "query",
            "required": false,
            "description": "Filter results by organisatienaam",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactgegevens",
            "in": "query",
            "required": false,
            "description": "Filter results by contactgegevens",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "website",
            "in": "query",
            "required": false,
            "description": "Filter results by website",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beschrijving",
            "in": "query",
            "required": false,
            "description": "Filter results by beschrijving",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "links",
            "in": "query",
            "required": false,
            "description": "Filter results by links",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "oin",
            "in": "query",
            "required": false,
            "description": "Filter results by oin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Filter results by status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Organisatie objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisatie"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Organisatie object",
        "operationId": "createOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Create a new Organisatie object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisatie"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organisatie created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisatie"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/organisatie/{id}": {
      "tags": [
        "Organisatie"
      ],
      "get": {
        "summary": "Get a Organisatie object by ID",
        "operationId": "getOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Retrieve a specific Organisatie object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Organisatie object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Organisatie found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisatie"
                }
              }
            }
          },
          "404": {
            "description": "Organisatie not found."
          }
        }
      },
      "put": {
        "summary": "Update a Organisatie object",
        "operationId": "updateOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Update an existing Organisatie object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Organisatie object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisatie"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organisatie updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisatie"
                }
              }
            }
          },
          "404": {
            "description": "Organisatie not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Organisatie object",
        "operationId": "deleteOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Delete a specific Organisatie object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Organisatie object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Organisatie deleted successfully"
          },
          "404": {
            "description": "Organisatie not found"
          }
        }
      }
    },
    "/voorzieningen/organisatie/{id}/audit-trails": {
      "tags": [
        "Organisatie"
      ],
      "get": {
        "summary": "Get audit logs for a Organisatie object",
        "operationId": "getLogsOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Retrieve the audit trail for a specific Organisatie object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Organisatie object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organisatie not found"
          }
        }
      }
    },
    "/voorzieningen/organisatie/{id}/files": {
      "tags": [
        "Organisatie"
      ],
      "get": {
        "summary": "Get files for a Organisatie object",
        "operationId": "getFilesOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Retrieve all files associated with a specific Organisatie object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Organisatie object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organisatie not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Organisatie object",
        "operationId": "uploadFileOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Upload a new file and associate it with a specific Organisatie object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Organisatie object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Organisatie not found"
          }
        }
      }
    },
    "/voorzieningen/organisatie/{id}/lock": {
      "tags": [
        "Organisatie"
      ],
      "post": {
        "summary": "Lock a Organisatie object",
        "operationId": "lockOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Lock a specific Organisatie object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Organisatie object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Organisatie not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/organisatie/{id}/unlock": {
      "tags": [
        "Organisatie"
      ],
      "post": {
        "summary": "Unlock a Organisatie object",
        "operationId": "unlockOrganisatie",
        "tags": [
          "Organisatie"
        ],
        "description": "Remove the lock from a specific Organisatie object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Organisatie object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Organisatie not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/voorzieninggebruik": {
      "tags": [
        "VoorzieningGebruik"
      ],
      "get": {
        "summary": "Get all VoorzieningGebruik objects",
        "operationId": "getAllVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Retrieve a list of all VoorzieningGebruik objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "organisatieId",
            "in": "query",
            "required": false,
            "description": "Filter results by organisatieId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "voorzieningId",
            "in": "query",
            "required": false,
            "description": "Filter results by voorzieningId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versieId",
            "in": "query",
            "required": false,
            "description": "Filter results by versieId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beheerder",
            "in": "query",
            "required": false,
            "description": "Filter results by beheerder",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "startDatum",
            "in": "query",
            "required": false,
            "description": "Filter results by startDatum",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eindDatum",
            "in": "query",
            "required": false,
            "description": "Filter results by eindDatum",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opmerkingen",
            "in": "query",
            "required": false,
            "description": "Filter results by opmerkingen",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bbnScore",
            "in": "query",
            "required": false,
            "description": "Filter results by bbnScore",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ibpScore",
            "in": "query",
            "required": false,
            "description": "Filter results by ibpScore",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bivClassificatie",
            "in": "query",
            "required": false,
            "description": "Filter results by bivClassificatie",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "bedrijfsKritisch",
            "in": "query",
            "required": false,
            "description": "Filter results by bedrijfsKritisch",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "privacyGevoelig",
            "in": "query",
            "required": false,
            "description": "Filter results by privacyGevoelig",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Filter results by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hosting",
            "in": "query",
            "required": false,
            "description": "Filter results by hosting",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deelneming",
            "in": "query",
            "required": false,
            "description": "Filter results by deelneming",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact",
            "in": "query",
            "required": false,
            "description": "Filter results by contact",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of VoorzieningGebruik objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VoorzieningGebruik"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new VoorzieningGebruik object",
        "operationId": "createVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Create a new VoorzieningGebruik object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoorzieningGebruik"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "VoorzieningGebruik created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoorzieningGebruik"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/voorzieninggebruik/{id}": {
      "tags": [
        "VoorzieningGebruik"
      ],
      "get": {
        "summary": "Get a VoorzieningGebruik object by ID",
        "operationId": "getVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Retrieve a specific VoorzieningGebruik object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the VoorzieningGebruik object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "VoorzieningGebruik found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoorzieningGebruik"
                }
              }
            }
          },
          "404": {
            "description": "VoorzieningGebruik not found."
          }
        }
      },
      "put": {
        "summary": "Update a VoorzieningGebruik object",
        "operationId": "updateVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Update an existing VoorzieningGebruik object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the VoorzieningGebruik object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoorzieningGebruik"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "VoorzieningGebruik updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoorzieningGebruik"
                }
              }
            }
          },
          "404": {
            "description": "VoorzieningGebruik not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a VoorzieningGebruik object",
        "operationId": "deleteVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Delete a specific VoorzieningGebruik object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the VoorzieningGebruik object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "VoorzieningGebruik deleted successfully"
          },
          "404": {
            "description": "VoorzieningGebruik not found"
          }
        }
      }
    },
    "/voorzieningen/voorzieninggebruik/{id}/audit-trails": {
      "tags": [
        "VoorzieningGebruik"
      ],
      "get": {
        "summary": "Get audit logs for a VoorzieningGebruik object",
        "operationId": "getLogsVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Retrieve the audit trail for a specific VoorzieningGebruik object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the VoorzieningGebruik object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "VoorzieningGebruik not found"
          }
        }
      }
    },
    "/voorzieningen/voorzieninggebruik/{id}/files": {
      "tags": [
        "VoorzieningGebruik"
      ],
      "get": {
        "summary": "Get files for a VoorzieningGebruik object",
        "operationId": "getFilesVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Retrieve all files associated with a specific VoorzieningGebruik object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the VoorzieningGebruik object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "VoorzieningGebruik not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a VoorzieningGebruik object",
        "operationId": "uploadFileVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Upload a new file and associate it with a specific VoorzieningGebruik object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the VoorzieningGebruik object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "VoorzieningGebruik not found"
          }
        }
      }
    },
    "/voorzieningen/voorzieninggebruik/{id}/lock": {
      "tags": [
        "VoorzieningGebruik"
      ],
      "post": {
        "summary": "Lock a VoorzieningGebruik object",
        "operationId": "lockVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Lock a specific VoorzieningGebruik object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the VoorzieningGebruik object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "VoorzieningGebruik not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/voorzieninggebruik/{id}/unlock": {
      "tags": [
        "VoorzieningGebruik"
      ],
      "post": {
        "summary": "Unlock a VoorzieningGebruik object",
        "operationId": "unlockVoorzieninggebruik",
        "tags": [
          "VoorzieningGebruik"
        ],
        "description": "Remove the lock from a specific VoorzieningGebruik object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the VoorzieningGebruik object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "VoorzieningGebruik not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/contract": {
      "tags": [
        "Contract"
      ],
      "get": {
        "summary": "Get all Contract objects",
        "operationId": "getAllContract",
        "tags": [
          "Contract"
        ],
        "description": "Retrieve a list of all Contract objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "voorzieningAanbod",
            "in": "query",
            "required": false,
            "description": "Filter results by voorzieningAanbod",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "voorzieningGebruik",
            "in": "query",
            "required": false,
            "description": "Filter results by voorzieningGebruik",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "startDatum",
            "in": "query",
            "required": false,
            "description": "Filter results by startDatum",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eindDatum",
            "in": "query",
            "required": false,
            "description": "Filter results by eindDatum",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractNummer",
            "in": "query",
            "required": false,
            "description": "Filter results by contractNummer",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractType",
            "in": "query",
            "required": false,
            "description": "Filter results by contractType",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kosten",
            "in": "query",
            "required": false,
            "description": "Filter results by kosten",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "kostenPeriode",
            "in": "query",
            "required": false,
            "description": "Filter results by kostenPeriode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactpersoonAanbieder",
            "in": "query",
            "required": false,
            "description": "Filter results by contactpersoonAanbieder",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "contactpersoonGebruiker",
            "in": "query",
            "required": false,
            "description": "Filter results by contactpersoonGebruiker",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "documentReferentie",
            "in": "query",
            "required": false,
            "description": "Filter results by documentReferentie",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Filter results by status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opmerkingen",
            "in": "query",
            "required": false,
            "description": "Filter results by opmerkingen",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Contract objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contract"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Contract object",
        "operationId": "createContract",
        "tags": [
          "Contract"
        ],
        "description": "Create a new Contract object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contract"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contract created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/contract/{id}": {
      "tags": [
        "Contract"
      ],
      "get": {
        "summary": "Get a Contract object by ID",
        "operationId": "getContract",
        "tags": [
          "Contract"
        ],
        "description": "Retrieve a specific Contract object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contract object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Contract found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          },
          "404": {
            "description": "Contract not found."
          }
        }
      },
      "put": {
        "summary": "Update a Contract object",
        "operationId": "updateContract",
        "tags": [
          "Contract"
        ],
        "description": "Update an existing Contract object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contract object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contract"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contract"
                }
              }
            }
          },
          "404": {
            "description": "Contract not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Contract object",
        "operationId": "deleteContract",
        "tags": [
          "Contract"
        ],
        "description": "Delete a specific Contract object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contract object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contract deleted successfully"
          },
          "404": {
            "description": "Contract not found"
          }
        }
      }
    },
    "/voorzieningen/contract/{id}/audit-trails": {
      "tags": [
        "Contract"
      ],
      "get": {
        "summary": "Get audit logs for a Contract object",
        "operationId": "getLogsContract",
        "tags": [
          "Contract"
        ],
        "description": "Retrieve the audit trail for a specific Contract object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contract object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contract not found"
          }
        }
      }
    },
    "/voorzieningen/contract/{id}/files": {
      "tags": [
        "Contract"
      ],
      "get": {
        "summary": "Get files for a Contract object",
        "operationId": "getFilesContract",
        "tags": [
          "Contract"
        ],
        "description": "Retrieve all files associated with a specific Contract object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contract object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contract not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Contract object",
        "operationId": "uploadFileContract",
        "tags": [
          "Contract"
        ],
        "description": "Upload a new file and associate it with a specific Contract object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contract object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Contract not found"
          }
        }
      }
    },
    "/voorzieningen/contract/{id}/lock": {
      "tags": [
        "Contract"
      ],
      "post": {
        "summary": "Lock a Contract object",
        "operationId": "lockContract",
        "tags": [
          "Contract"
        ],
        "description": "Lock a specific Contract object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contract object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Contract not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/contract/{id}/unlock": {
      "tags": [
        "Contract"
      ],
      "post": {
        "summary": "Unlock a Contract object",
        "operationId": "unlockContract",
        "tags": [
          "Contract"
        ],
        "description": "Remove the lock from a specific Contract object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Contract object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Contract not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/standaard": {
      "tags": [
        "Standaard"
      ],
      "get": {
        "summary": "Get all Standaard objects",
        "operationId": "getAllStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Retrieve a list of all Standaard objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "naam",
            "in": "query",
            "required": false,
            "description": "Filter results by naam",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beschrijving",
            "in": "query",
            "required": false,
            "description": "Filter results by beschrijving",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "standaardtype",
            "in": "query",
            "required": false,
            "description": "Filter results by standaardtype",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versie",
            "in": "query",
            "required": false,
            "description": "Filter results by versie",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beheerorganisatie",
            "in": "query",
            "required": false,
            "description": "Filter results by beheerorganisatie",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "website",
            "in": "query",
            "required": false,
            "description": "Filter results by website",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Filter results by status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Standaard objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Standaard"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Standaard object",
        "operationId": "createStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Create a new Standaard object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Standaard"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Standaard created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Standaard"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/standaard/{id}": {
      "tags": [
        "Standaard"
      ],
      "get": {
        "summary": "Get a Standaard object by ID",
        "operationId": "getStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Retrieve a specific Standaard object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Standaard object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Standaard found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Standaard"
                }
              }
            }
          },
          "404": {
            "description": "Standaard not found."
          }
        }
      },
      "put": {
        "summary": "Update a Standaard object",
        "operationId": "updateStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Update an existing Standaard object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Standaard object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Standaard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Standaard updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Standaard"
                }
              }
            }
          },
          "404": {
            "description": "Standaard not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Standaard object",
        "operationId": "deleteStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Delete a specific Standaard object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Standaard object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Standaard deleted successfully"
          },
          "404": {
            "description": "Standaard not found"
          }
        }
      }
    },
    "/voorzieningen/standaard/{id}/audit-trails": {
      "tags": [
        "Standaard"
      ],
      "get": {
        "summary": "Get audit logs for a Standaard object",
        "operationId": "getLogsStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Retrieve the audit trail for a specific Standaard object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Standaard object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standaard not found"
          }
        }
      }
    },
    "/voorzieningen/standaard/{id}/files": {
      "tags": [
        "Standaard"
      ],
      "get": {
        "summary": "Get files for a Standaard object",
        "operationId": "getFilesStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Retrieve all files associated with a specific Standaard object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Standaard object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standaard not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Standaard object",
        "operationId": "uploadFileStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Upload a new file and associate it with a specific Standaard object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Standaard object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Standaard not found"
          }
        }
      }
    },
    "/voorzieningen/standaard/{id}/lock": {
      "tags": [
        "Standaard"
      ],
      "post": {
        "summary": "Lock a Standaard object",
        "operationId": "lockStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Lock a specific Standaard object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Standaard object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Standaard not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/standaard/{id}/unlock": {
      "tags": [
        "Standaard"
      ],
      "post": {
        "summary": "Unlock a Standaard object",
        "operationId": "unlockStandaard",
        "tags": [
          "Standaard"
        ],
        "description": "Remove the lock from a specific Standaard object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Standaard object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Standaard not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/review": {
      "tags": [
        "Review"
      ],
      "get": {
        "summary": "Get all Review objects",
        "operationId": "getAllReview",
        "tags": [
          "Review"
        ],
        "description": "Retrieve a list of all Review objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "voorziening",
            "in": "query",
            "required": false,
            "description": "Filter results by voorziening",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "score",
            "in": "query",
            "required": false,
            "description": "Filter results by score",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "titel",
            "in": "query",
            "required": false,
            "description": "Filter results by titel",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tekst",
            "in": "query",
            "required": false,
            "description": "Filter results by tekst",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "datum",
            "in": "query",
            "required": false,
            "description": "Filter results by datum",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "voordelen",
            "in": "query",
            "required": false,
            "description": "Filter results by voordelen",
            "schema": {
              "type": "array"
            }
          },
          {
            "name": "nadelen",
            "in": "query",
            "required": false,
            "description": "Filter results by nadelen",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Review objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Review object",
        "operationId": "createReview",
        "tags": [
          "Review"
        ],
        "description": "Create a new Review object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/review/{id}": {
      "tags": [
        "Review"
      ],
      "get": {
        "summary": "Get a Review object by ID",
        "operationId": "getReview",
        "tags": [
          "Review"
        ],
        "description": "Retrieve a specific Review object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Review object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Review found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "404": {
            "description": "Review not found."
          }
        }
      },
      "put": {
        "summary": "Update a Review object",
        "operationId": "updateReview",
        "tags": [
          "Review"
        ],
        "description": "Update an existing Review object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Review object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "404": {
            "description": "Review not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Review object",
        "operationId": "deleteReview",
        "tags": [
          "Review"
        ],
        "description": "Delete a specific Review object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Review object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Review deleted successfully"
          },
          "404": {
            "description": "Review not found"
          }
        }
      }
    },
    "/voorzieningen/review/{id}/audit-trails": {
      "tags": [
        "Review"
      ],
      "get": {
        "summary": "Get audit logs for a Review object",
        "operationId": "getLogsReview",
        "tags": [
          "Review"
        ],
        "description": "Retrieve the audit trail for a specific Review object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Review object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Review not found"
          }
        }
      }
    },
    "/voorzieningen/review/{id}/files": {
      "tags": [
        "Review"
      ],
      "get": {
        "summary": "Get files for a Review object",
        "operationId": "getFilesReview",
        "tags": [
          "Review"
        ],
        "description": "Retrieve all files associated with a specific Review object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Review object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Review not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Review object",
        "operationId": "uploadFileReview",
        "tags": [
          "Review"
        ],
        "description": "Upload a new file and associate it with a specific Review object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Review object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Review not found"
          }
        }
      }
    },
    "/voorzieningen/review/{id}/lock": {
      "tags": [
        "Review"
      ],
      "post": {
        "summary": "Lock a Review object",
        "operationId": "lockReview",
        "tags": [
          "Review"
        ],
        "description": "Lock a specific Review object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Review object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Review not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/review/{id}/unlock": {
      "tags": [
        "Review"
      ],
      "post": {
        "summary": "Unlock a Review object",
        "operationId": "unlockReview",
        "tags": [
          "Review"
        ],
        "description": "Remove the lock from a specific Review object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Review object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Review not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/koppeling": {
      "tags": [
        "Koppeling"
      ],
      "get": {
        "summary": "Get all Koppeling objects",
        "operationId": "getAllKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Retrieve a list of all Koppeling objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "van",
            "in": "query",
            "required": false,
            "description": "Filter results by van",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "naar",
            "in": "query",
            "required": false,
            "description": "Filter results by naar",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "standaard",
            "in": "query",
            "required": false,
            "description": "Filter results by standaard",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versie",
            "in": "query",
            "required": false,
            "description": "Filter results by versie",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Koppeling objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Koppeling"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Koppeling object",
        "operationId": "createKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Create a new Koppeling object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Koppeling"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Koppeling created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Koppeling"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/koppeling/{id}": {
      "tags": [
        "Koppeling"
      ],
      "get": {
        "summary": "Get a Koppeling object by ID",
        "operationId": "getKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Retrieve a specific Koppeling object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Koppeling object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Koppeling found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Koppeling"
                }
              }
            }
          },
          "404": {
            "description": "Koppeling not found."
          }
        }
      },
      "put": {
        "summary": "Update a Koppeling object",
        "operationId": "updateKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Update an existing Koppeling object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Koppeling object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Koppeling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Koppeling updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Koppeling"
                }
              }
            }
          },
          "404": {
            "description": "Koppeling not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Koppeling object",
        "operationId": "deleteKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Delete a specific Koppeling object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Koppeling object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Koppeling deleted successfully"
          },
          "404": {
            "description": "Koppeling not found"
          }
        }
      }
    },
    "/voorzieningen/koppeling/{id}/audit-trails": {
      "tags": [
        "Koppeling"
      ],
      "get": {
        "summary": "Get audit logs for a Koppeling object",
        "operationId": "getLogsKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Retrieve the audit trail for a specific Koppeling object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Koppeling object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Koppeling not found"
          }
        }
      }
    },
    "/voorzieningen/koppeling/{id}/files": {
      "tags": [
        "Koppeling"
      ],
      "get": {
        "summary": "Get files for a Koppeling object",
        "operationId": "getFilesKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Retrieve all files associated with a specific Koppeling object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Koppeling object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Koppeling not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Koppeling object",
        "operationId": "uploadFileKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Upload a new file and associate it with a specific Koppeling object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Koppeling object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Koppeling not found"
          }
        }
      }
    },
    "/voorzieningen/koppeling/{id}/lock": {
      "tags": [
        "Koppeling"
      ],
      "post": {
        "summary": "Lock a Koppeling object",
        "operationId": "lockKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Lock a specific Koppeling object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Koppeling object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Koppeling not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/koppeling/{id}/unlock": {
      "tags": [
        "Koppeling"
      ],
      "post": {
        "summary": "Unlock a Koppeling object",
        "operationId": "unlockKoppeling",
        "tags": [
          "Koppeling"
        ],
        "description": "Remove the lock from a specific Koppeling object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Koppeling object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Koppeling not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    },
    "/voorzieningen/beoordeeling": {
      "tags": [
        "Beoordeeling"
      ],
      "get": {
        "summary": "Get all Beoordeeling objects",
        "operationId": "getAllBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Retrieve a list of all Beoordeeling objects",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          },
          {
            "name": "_search",
            "in": "query",
            "required": false,
            "description": "Full-text search query to filter objects in the collection.",
            "schema": {
              "type": "string"
            },
            "example": "search term"
          },
          {
            "name": "titel",
            "in": "query",
            "required": false,
            "description": "Filter results by titel",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beschrijving",
            "in": "query",
            "required": false,
            "description": "Filter results by beschrijving",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "waardering",
            "in": "query",
            "required": false,
            "description": "Filter results by waardering",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "voorziening",
            "in": "query",
            "required": false,
            "description": "Filter results by voorziening",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "aanbod",
            "in": "query",
            "required": false,
            "description": "Filter results by aanbod",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gebruik",
            "in": "query",
            "required": false,
            "description": "Filter results by gebruik",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Beoordeeling objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Beoordeeling"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new Beoordeeling object",
        "operationId": "createBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Create a new Beoordeeling object with the provided data",
        "parameters": [
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Beoordeeling"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Beoordeeling created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beoordeeling"
                }
              }
            }
          }
        }
      }
    },
    "/voorzieningen/beoordeeling/{id}": {
      "tags": [
        "Beoordeeling"
      ],
      "get": {
        "summary": "Get a Beoordeeling object by ID",
        "operationId": "getBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Retrieve a specific Beoordeeling object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Beoordeeling object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "responses": {
          "200": {
            "description": "Beoordeeling found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beoordeeling"
                }
              }
            }
          },
          "404": {
            "description": "Beoordeeling not found."
          }
        }
      },
      "put": {
        "summary": "Update a Beoordeeling object",
        "operationId": "updateBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Update an existing Beoordeeling object with the provided data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Beoordeeling object to update",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "_extend",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to extend.",
            "schema": {
              "type": "string"
            },
            "example": "property1,property2,property3"
          },
          {
            "name": "_filter",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to include in the response. ",
            "schema": {
              "type": "string"
            },
            "example": "id,name,description"
          },
          {
            "name": "_unset",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of properties to remove from the response.",
            "schema": {
              "type": "string"
            },
            "example": "internalField1,internalField2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Beoordeeling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Beoordeeling updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beoordeeling"
                }
              }
            }
          },
          "404": {
            "description": "Beoordeeling not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a Beoordeeling object",
        "operationId": "deleteBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Delete a specific Beoordeeling object by its unique identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Beoordeeling object to delete",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Beoordeeling deleted successfully"
          },
          "404": {
            "description": "Beoordeeling not found"
          }
        }
      }
    },
    "/voorzieningen/beoordeeling/{id}/audit-trails": {
      "tags": [
        "Beoordeeling"
      ],
      "get": {
        "summary": "Get audit logs for a Beoordeeling object",
        "operationId": "getLogsBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Retrieve the audit trail for a specific Beoordeeling object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Beoordeeling object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditTrail"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Beoordeeling not found"
          }
        }
      }
    },
    "/voorzieningen/beoordeeling/{id}/files": {
      "tags": [
        "Beoordeeling"
      ],
      "get": {
        "summary": "Get files for a Beoordeeling object",
        "operationId": "getFilesBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Retrieve all files associated with a specific Beoordeeling object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Beoordeeling object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Files retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Beoordeeling not found"
          }
        }
      },
      "post": {
        "summary": "Upload a file for a Beoordeeling object",
        "operationId": "uploadFileBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Upload a new file and associate it with a specific Beoordeeling object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Beoordeeling object",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "404": {
            "description": "Beoordeeling not found"
          }
        }
      }
    },
    "/voorzieningen/beoordeeling/{id}/lock": {
      "tags": [
        "Beoordeeling"
      ],
      "post": {
        "summary": "Lock a Beoordeeling object",
        "operationId": "lockBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Lock a specific Beoordeeling object to prevent concurrent modifications",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Beoordeeling object to lock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object locked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lock"
                }
              }
            }
          },
          "404": {
            "description": "Beoordeeling not found"
          },
          "409": {
            "description": "Object is already locked"
          }
        }
      }
    },
    "/voorzieningen/beoordeeling/{id}/unlock": {
      "tags": [
        "Beoordeeling"
      ],
      "post": {
        "summary": "Unlock a Beoordeeling object",
        "operationId": "unlockBeoordeeling",
        "tags": [
          "Beoordeeling"
        ],
        "description": "Remove the lock from a specific Beoordeeling object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the Beoordeeling object to unlock",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object unlocked successfully"
          },
          "404": {
            "description": "Beoordeeling not found"
          },
          "409": {
            "description": "Object is not locked or locked by another user"
          }
        }
      }
    }
  }
}